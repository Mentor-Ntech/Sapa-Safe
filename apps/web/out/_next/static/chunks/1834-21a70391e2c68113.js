"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1834],{49205:function(e,t,n){n.d(t,{Aj:function(){return v},K$:function(){return b},Cj:function(){return w},nC:function(){return A},Gr:function(){return M},Zn:function(){return f},S2:function(){return h}});var a=n(27693),i=n(26501),r=n(90296),s=JSON.parse('[{"inputs":[{"internalType":"address","name":"_tokenRegistry","type":"address"},{"internalType":"address","name":"_penaltyManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"recoverer","type":"address"}],"name":"EmergencyRecovery","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"totalVaults","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalUsers","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalAmountLocked","type":"uint256"}],"name":"GlobalAnalyticsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldManager","type":"address"},{"indexed":true,"internalType":"address","name":"newManager","type":"address"},{"indexed":true,"internalType":"address","name":"updater","type":"address"}],"name":"PenaltyManagerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldRegistry","type":"address"},{"indexed":true,"internalType":"address","name":"newRegistry","type":"address"},{"indexed":true,"internalType":"address","name":"updater","type":"address"}],"name":"TokenRegistryUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalSaved","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"currentLocked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"completedVaults","type":"uint256"}],"name":"UserAnalyticsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"vault","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"duration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultId","type":"uint256"}],"name":"VaultCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"tokenRegistry","type":"address"},{"indexed":true,"internalType":"address","name":"penaltyManager","type":"address"}],"name":"VaultFactoryInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pauser","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VaultFactoryPaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"unpauser","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VaultFactoryUnpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"vault","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VaultWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"vault","type":"address"},{"indexed":false,"internalType":"uint256","name":"penalty","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"returned","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VaultWithdrawnEarly","type":"event"},{"inputs":[],"name":"MAX_MONTHS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TARGET_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TOTAL_VAULTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_VAULTS_PER_USER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_MONTHS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_TARGET_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allVaults","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"targetAmount","type":"uint256"},{"internalType":"uint256","name":"totalMonths","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"createVault","outputs":[{"internalType":"address","name":"vaultAddress","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"emergencyRecover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllVaults","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGlobalAnalytics","outputs":[{"components":[{"internalType":"uint256","name":"totalVaultsCreated","type":"uint256"},{"internalType":"uint256","name":"totalVaultsCompleted","type":"uint256"},{"internalType":"uint256","name":"totalEarlyWithdrawals","type":"uint256"},{"internalType":"uint256","name":"totalAmountLocked","type":"uint256"},{"internalType":"uint256","name":"totalAmountWithdrawn","type":"uint256"},{"internalType":"uint256","name":"totalPenaltiesCollected","type":"uint256"},{"internalType":"uint256","name":"averageVaultDuration","type":"uint256"},{"internalType":"uint256","name":"totalUsers","type":"uint256"},{"internalType":"uint256","name":"activeUsers","type":"uint256"}],"internalType":"struct VaultFactory.GlobalAnalytics","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSupportedTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenInfo","outputs":[{"components":[{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"country","type":"string"},{"internalType":"bool","name":"isSupported","type":"bool"},{"internalType":"uint256","name":"minAmount","type":"uint256"}],"internalType":"struct TokenRegistry.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserActiveVaults","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserAnalytics","outputs":[{"components":[{"internalType":"uint256","name":"totalSaved","type":"uint256"},{"internalType":"uint256","name":"totalWithdrawn","type":"uint256"},{"internalType":"uint256","name":"currentLocked","type":"uint256"},{"internalType":"uint256","name":"completedVaults","type":"uint256"},{"internalType":"uint256","name":"earlyWithdrawals","type":"uint256"},{"internalType":"uint256","name":"totalPenalties","type":"uint256"},{"internalType":"uint256","name":"averageLockDuration","type":"uint256"},{"internalType":"uint256","name":"lastVaultCreated","type":"uint256"},{"internalType":"uint256","name":"lastVaultCompleted","type":"uint256"}],"internalType":"struct VaultFactory.UserAnalytics","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserCompletedVaults","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserEarlyWithdrawnVaults","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserInsights","outputs":[{"internalType":"uint256","name":"totalSaved","type":"uint256"},{"internalType":"uint256","name":"currentLocked","type":"uint256"},{"internalType":"uint256","name":"completionRate","type":"uint256"},{"internalType":"uint256","name":"averageDuration","type":"uint256"},{"internalType":"uint256","name":"totalPenalties","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserSummary","outputs":[{"internalType":"uint256","name":"totalVaults","type":"uint256"},{"internalType":"uint256","name":"activeVaults","type":"uint256"},{"internalType":"uint256","name":"completedVaults","type":"uint256"},{"internalType":"uint256","name":"earlyWithdrawals","type":"uint256"},{"internalType":"uint256","name":"totalAmountSaved","type":"uint256"},{"internalType":"uint256","name":"currentAmountLocked","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserTerminatedVaults","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserVaultCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"getUserVaultCountByToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserVaultStatusSummary","outputs":[{"internalType":"uint256","name":"activeCount","type":"uint256"},{"internalType":"uint256","name":"completedCount","type":"uint256"},{"internalType":"uint256","name":"earlyWithdrawnCount","type":"uint256"},{"internalType":"uint256","name":"terminatedCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserVaults","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum SavingsVault.VaultStatus","name":"status","type":"uint8"}],"name":"getUserVaultsByStatus","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"getUserVaultsByToken","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"vaultAddress","type":"address"}],"name":"getVaultInfo","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"targetAmount","type":"uint256"},{"internalType":"uint256","name":"monthlyAmount","type":"uint256"},{"internalType":"uint256","name":"totalMonths","type":"uint256"},{"internalType":"uint256","name":"currentBalance","type":"uint256"},{"internalType":"uint256","name":"totalPaid","type":"uint256"},{"internalType":"uint256","name":"totalPenalties","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"enum SavingsVault.VaultStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"currentMonth","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"globalAnalytics","outputs":[{"internalType":"uint256","name":"totalVaultsCreated","type":"uint256"},{"internalType":"uint256","name":"totalVaultsCompleted","type":"uint256"},{"internalType":"uint256","name":"totalEarlyWithdrawals","type":"uint256"},{"internalType":"uint256","name":"totalAmountLocked","type":"uint256"},{"internalType":"uint256","name":"totalAmountWithdrawn","type":"uint256"},{"internalType":"uint256","name":"totalPenaltiesCollected","type":"uint256"},{"internalType":"uint256","name":"averageVaultDuration","type":"uint256"},{"internalType":"uint256","name":"totalUsers","type":"uint256"},{"internalType":"uint256","name":"activeUsers","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"penaltyManager","outputs":[{"internalType":"contract PenaltyManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenRegistry","outputs":[{"internalType":"contract TokenRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newManager","type":"address"}],"name":"updatePenaltyManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newRegistry","type":"address"}],"name":"updateTokenRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userAnalytics","outputs":[{"internalType":"uint256","name":"totalSaved","type":"uint256"},{"internalType":"uint256","name":"totalWithdrawn","type":"uint256"},{"internalType":"uint256","name":"currentLocked","type":"uint256"},{"internalType":"uint256","name":"completedVaults","type":"uint256"},{"internalType":"uint256","name":"earlyWithdrawals","type":"uint256"},{"internalType":"uint256","name":"totalPenalties","type":"uint256"},{"internalType":"uint256","name":"averageLockDuration","type":"uint256"},{"internalType":"uint256","name":"lastVaultCreated","type":"uint256"},{"internalType":"uint256","name":"lastVaultCompleted","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userVaults","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userVaultsByToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vaultCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"vaultAddress","type":"address"}],"name":"withdrawEarlyFromVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"vaultAddress","type":"address"}],"name":"withdrawFromVault","outputs":[],"stateMutability":"nonpayable","type":"function"}]'),u=JSON.parse('[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_targetAmount","type":"uint256"},{"internalType":"uint256","name":"_totalMonths","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalSaved","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"penalty","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"returned","type":"uint256"}],"name":"EarlyWithdrawal","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"month","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"currentBalance","type":"uint256"}],"name":"MonthlyPaymentMade","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"month","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"penaltyAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"currentBalance","type":"uint256"}],"name":"MonthlyPaymentMissed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalSaved","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalPaid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalPenalties","type":"uint256"}],"name":"VaultCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"targetAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"monthlyAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalMonths","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startDate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endDate","type":"uint256"}],"name":"VaultCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VaultTerminated","type":"event"},{"inputs":[],"name":"EARLY_WITHDRAWAL_PENALTY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MONTHLY_DEFAULT_PENALTY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"canWithdrawCompleted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"canWithdrawEarly","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentMonth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getMissedPaymentsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_month","type":"uint256"}],"name":"getMonthlyPayment","outputs":[{"internalType":"uint256","name":"dueDate","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"enum SavingsVault.PaymentStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"penaltyAmount","type":"uint256"},{"internalType":"bool","name":"penaltyPaid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNextPaymentDueDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPaymentSummary","outputs":[{"internalType":"uint256","name":"totalShouldPay","type":"uint256"},{"internalType":"uint256","name":"totalActuallyPaid","type":"uint256"},{"internalType":"uint256","name":"totalPenaltiesPaid","type":"uint256"},{"internalType":"uint256","name":"missedPaymentsCount","type":"uint256"},{"internalType":"uint256","name":"completedPaymentsCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProgressPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultInfo","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"targetAmount","type":"uint256"},{"internalType":"uint256","name":"monthlyAmount","type":"uint256"},{"internalType":"uint256","name":"totalMonths","type":"uint256"},{"internalType":"uint256","name":"currentBalance","type":"uint256"},{"internalType":"uint256","name":"totalPaid","type":"uint256"},{"internalType":"uint256","name":"totalPenalties","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"enum SavingsVault.VaultStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"currentMonth","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isCompleted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_month","type":"uint256"}],"name":"makeMonthlyPayment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"monthlyPayments","outputs":[{"internalType":"uint256","name":"dueDate","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"enum SavingsVault.PaymentStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"penaltyAmount","type":"uint256"},{"internalType":"bool","name":"penaltyPaid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_upToMonth","type":"uint256"}],"name":"processAllMissedPayments","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_month","type":"uint256"}],"name":"processMissedPayment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"targetAmount","type":"uint256"},{"internalType":"uint256","name":"monthlyAmount","type":"uint256"},{"internalType":"uint256","name":"totalMonths","type":"uint256"},{"internalType":"uint256","name":"currentBalance","type":"uint256"},{"internalType":"uint256","name":"totalPaid","type":"uint256"},{"internalType":"uint256","name":"totalPenalties","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"enum SavingsVault.VaultStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"withdrawalTime","type":"uint256"},{"internalType":"uint256","name":"earlyWithdrawalPenalty","type":"uint256"},{"internalType":"uint256","name":"returnedAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawCompleted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawEarly","outputs":[],"stateMutability":"nonpayable","type":"function"}]'),l=JSON.parse('[{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"},{"indexed":false,"internalType":"string","name":"country","type":"string"},{"indexed":false,"internalType":"uint256","name":"minAmount","type":"uint256"}],"name":"TokenAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"oldMinAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newMinAmount","type":"uint256"}],"name":"TokenLimitsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenCount","type":"uint256"}],"name":"TokenRegistryInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"},{"indexed":false,"internalType":"string","name":"country","type":"string"}],"name":"TokenRemoved","type":"event"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"country","type":"string"},{"internalType":"uint256","name":"minAmount","type":"uint256"}],"name":"addToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getSupportedTokenCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSupportedTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenInfo","outputs":[{"components":[{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"country","type":"string"},{"internalType":"bool","name":"isSupported","type":"bool"},{"internalType":"uint256","name":"minAmount","type":"uint256"}],"internalType":"struct TokenRegistry.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"isTokenSupported","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"removeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"supportedTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokens","outputs":[{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"country","type":"string"},{"internalType":"bool","name":"isSupported","type":"bool"},{"internalType":"uint256","name":"minAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"}],"name":"updateTokenMinAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"validateAmount","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]'),o=JSON.parse('[{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"recoverer","type":"address"}],"name":"EmergencyRecovery","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"vaultId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"penalty","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"remainingAmount","type":"uint256"}],"name":"PenaltyCalculated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"treasury","type":"address"},{"indexed":true,"internalType":"address","name":"collector","type":"address"}],"name":"PenaltyCollected","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"initialPenaltyPercentage","type":"uint256"},{"indexed":false,"internalType":"address","name":"initialTreasury","type":"address"}],"name":"PenaltyManagerInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPercentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPercentage","type":"uint256"},{"indexed":true,"internalType":"address","name":"updater","type":"address"}],"name":"PenaltyPercentageUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldTreasury","type":"address"},{"indexed":true,"internalType":"address","name":"newTreasury","type":"address"},{"indexed":true,"internalType":"address","name":"updater","type":"address"}],"name":"TreasuryAddressUpdated","type":"event"},{"inputs":[],"name":"BASIS_POINTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PENALTY_PERCENTAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"calculatePenalty","outputs":[{"internalType":"uint256","name":"penalty","type":"uint256"},{"internalType":"uint256","name":"remainingAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"customPercentage","type":"uint256"}],"name":"calculatePenaltyWithPercentage","outputs":[{"internalType":"uint256","name":"penalty","type":"uint256"},{"internalType":"uint256","name":"remainingAmount","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"calculatePenaltyWithVaultId","outputs":[{"internalType":"uint256","name":"penalty","type":"uint256"},{"internalType":"uint256","name":"remainingAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"collectPenalty","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"emergencyRecover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getPenaltyPercentageAsPercent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPenaltyPercentageDecimal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTreasuryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"isPenaltyAcceptable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"penaltyPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasuryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newPercentage","type":"uint256"}],"name":"updatePenaltyPercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newTreasury","type":"address"}],"name":"updateTreasuryAddress","outputs":[],"stateMutability":"nonpayable","type":"function"}]');let p={alfajores:{tokenRegistry:{address:"0xa54286F049A9d8A8867707E3b2E958AD49Bdd30B"},penaltyManager:{address:"0x92B16Fd77CDE4e27DEff8F9b2975a6a57C0b789b"},vaultFactory:{address:"0x7b6daCea811fd2704911E05c794CE08bF24430f4"}}},y=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"alfajores";return p[e].vaultFactory.address},d=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"alfajores";return p[e].tokenRegistry.address},m=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"alfajores";return p[e].penaltyManager.address};var c=n(71200),g=n(96512),T=n(85236);let f=()=>{let{address:e}=(0,c.m)(),t=(0,g.x)(),n=y("alfajores");console.log("VaultFactory hook:",{address:e,chainId:t,vaultFactoryAddress:n,isAlfajores:44787===t});let{data:u,isLoading:l,refetch:o,error:p}=(0,a.u)({address:n,abi:s,functionName:"getUserVaults",args:e?[e]:void 0,query:{enabled:!!e}});console.log("User vaults query:",{userVaults:u,isLoadingUserVaults:l,userVaultsError:p,hasAddress:!!e});let{data:d,isLoading:m}=(0,a.u)({address:n,abi:s,functionName:"getTotalVaults"}),{data:f,writeContract:b,isPending:w,error:v}=(0,i.S)(),{isLoading:h,isSuccess:C,error:A,data:M}=(0,r.A)({hash:f}),k=(0,T.useCallback)(async(a,i,r,u)=>{try{if(console.log("Creating monthly savings vault with params:",{tokenAddress:a,targetAmount:i.toString(),totalMonths:r,goal:u}),!e)throw Error("No wallet address available");if(!a||!i||!r)throw Error("Missing required parameters");if(r<1||r>12)throw Error("Total months must be between 1 and 12");if(44787!==t)throw Error("Wrong network! Expected Alfajores (44787), got ".concat(t));let l=BigInt(Math.floor(Date.now()/1e3)+1200);return console.log("Calling createVault with args:",[a,i.toString(),r,l.toString()]),b({address:n,abi:s,functionName:"createVault",args:[a,i,BigInt(r),l]}),console.log("✅ Monthly savings vault creation transaction sent!"),f}catch(e){throw console.error("Error in createVaultWithParams:",e),e}},[e,t,n,b,f]),{writeContract:x,isPending:S,error:D}=(0,i.S)(),{data:P,refetch:E,isLoading:V}=(0,a.u)({address:e?"0x4a5b03B8b16122D330306c65e4CA4BC5Dd6511d0":void 0,abi:[{inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],stateMutability:"view",type:"function"}],functionName:"allowance",args:e?[e,n]:void 0,query:{enabled:!!e}}),N=(0,T.useCallback)(async(e,t)=>{try{return console.log("Checking token allowance..."),console.log("- Current allowance:",(null==P?void 0:P.toString())||"0"),console.log("- Required amount:",t.toString()),P&&P>=t}catch(e){return console.error("Error checking token allowance:",e),!1}},[P]),F=(0,T.useCallback)(async(e,t)=>{try{return console.log("Approving tokens for factory address:",n),console.log("Token address:",e),console.log("Amount:",t.toString()),x({address:e,abi:[{inputs:[{name:"spender",type:"address"},{name:"amount",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],functionName:"approve",args:[n,t]}),console.log("✅ Token approval transaction sent!"),!0}catch(e){throw console.error("Error approving tokens:",e),e}},[x,n]),{data:O,isLoading:U,refetch:L,error:R}=(0,a.u)({address:n,abi:s,functionName:"getUserActiveVaults",args:e?[e]:void 0,query:{enabled:!!e}}),{data:B,isLoading:_,refetch:I,error:W}=(0,a.u)({address:n,abi:s,functionName:"getUserCompletedVaults",args:e?[e]:void 0,query:{enabled:!!e}}),{data:q,isLoading:G,refetch:j,error:z}=(0,a.u)({address:n,abi:s,functionName:"getUserEarlyWithdrawnVaults",args:e?[e]:void 0,query:{enabled:!!e}}),{data:J,isLoading:H,refetch:X,error:K}=(0,a.u)({address:n,abi:s,functionName:"getUserVaultStatusSummary",args:e?[e]:void 0,query:{enabled:!!e}}),Y=(0,T.useCallback)(async e=>{try{return console.log("Getting user active vaults for:",e),await L(),O||[]}catch(e){return console.error("Error getting user active vaults:",e),[]}},[O,L]),Z=(0,T.useCallback)(async e=>{try{return console.log("Getting user completed vaults for:",e),await I(),B||[]}catch(e){return console.error("Error getting user completed vaults:",e),[]}},[B,I]),$=(0,T.useCallback)(async e=>{try{return console.log("Getting user early withdrawn vaults for:",e),await j(),q||[]}catch(e){return console.error("Error getting user early withdrawn vaults:",e),[]}},[q,j]),Q=(0,T.useCallback)(async e=>{try{return console.log("Getting user vault status summary for:",e),await X(),J||{activeCount:0,completedCount:0,earlyWithdrawnCount:0,terminatedCount:0}}catch(e){return console.error("Error getting user vault status summary:",e),{activeCount:0,completedCount:0,earlyWithdrawnCount:0,terminatedCount:0}}},[J,X]);return{vaultFactoryAddress:n,userVaults:u,isLoadingUserVaults:l,refetchUserVaults:o,totalVaults:d,isLoadingTotalVaults:m,getVaultById:e=>(0,a.u)({address:n,abi:s,functionName:"getVaultById",args:[e],query:{enabled:!!e}}),userActiveVaults:O,isLoadingUserActiveVaults:U,refetchUserActiveVaults:L,userCompletedVaults:B,isLoadingUserCompletedVaults:_,refetchUserCompletedVaults:I,userEarlyWithdrawnVaults:q,isLoadingUserEarlyWithdrawnVaults:G,refetchUserEarlyWithdrawnVaults:j,userVaultStatusSummary:J,isLoadingUserVaultStatusSummary:H,refetchUserVaultStatusSummary:X,createVault:b,isCreatingVault:w,createVaultError:v,isCreateVaultPending:h,isCreateVaultSuccess:C,createVaultWithParams:k,approveTokensForFactory:F,isApprovingTokens:S,approveTokensError:D,checkTokenAllowance:N,getUserActiveVaults:Y,getUserCompletedVaults:Z,getUserEarlyWithdrawnVaults:$,getUserVaultStatusSummary:Q,createVaultData:f}},b=e=>{let{address:t}=(0,c.m)(),n=(0,g.x)();console.log("SavingsVault hook:",{vaultAddress:e,userAddress:t,chainId:n,isAlfajores:44787===n});let{data:s,isLoading:l,refetch:o}=(0,a.u)({address:e,abi:u,functionName:"getVaultInfo",query:{enabled:!!e}});console.log("Vault info query:",{vaultInfo:s,isLoadingVaultInfo:l});let{data:p,isLoading:y}=(0,a.u)({address:e,abi:u,functionName:"currentMonth",query:{enabled:!!e}}),{data:d,isLoading:m}=(0,a.u)({address:e,abi:u,functionName:"getMonthlyPayment",args:[p||1n],query:{enabled:!!e&&!!p}}),{data:f,isLoading:b}=(0,a.u)({address:e,abi:u,functionName:"getProgressPercentage",query:{enabled:!!e}}),{data:w,isLoading:v}=(0,a.u)({address:e,abi:u,functionName:"isCompleted",query:{enabled:!!e}}),{data:h,isLoading:C}=(0,a.u)({address:e,abi:u,functionName:"canWithdrawEarly",query:{enabled:!!e}}),{data:A,isLoading:M}=(0,a.u)({address:e,abi:u,functionName:"canWithdrawCompleted",query:{enabled:!!e}}),{data:k,isLoading:x}=(0,a.u)({address:e,abi:u,functionName:"getNextPaymentDueDate",query:{enabled:!!e}}),{data:S,isLoading:D}=(0,a.u)({address:e,abi:u,functionName:"getMissedPaymentsCount",query:{enabled:!!e}}),{data:P,isLoading:E}=(0,a.u)({address:e,abi:u,functionName:"getPaymentSummary",query:{enabled:!!e}}),{data:V,writeContract:N,isPending:F,error:O}=(0,i.S)(),{isLoading:U,isSuccess:L}=(0,r.A)({hash:V}),{data:R,writeContract:B,isPending:_,error:I}=(0,i.S)(),{isLoading:W,isSuccess:q}=(0,r.A)({hash:R}),{data:G,writeContract:j,isPending:z,error:J}=(0,i.S)(),{isLoading:H,isSuccess:X}=(0,r.A)({hash:G}),{data:K,writeContract:Y,isPending:Z,error:$}=(0,i.S)(),{isLoading:Q,isSuccess:ee}=(0,r.A)({hash:K}),{data:et,writeContract:en,isPending:ea,error:ei}=(0,i.S)(),{isLoading:er,isSuccess:es}=(0,r.A)({hash:et}),eu=(0,T.useCallback)(t=>{if(!e){console.error("No vault address provided");return}return console.log("Making monthly payment for month:",t,"in vault:",e),N({address:e,abi:u,functionName:"makeMonthlyPayment",args:[BigInt(t)]})},[e,N]),el=(0,T.useCallback)(t=>{if(!e){console.error("No vault address provided");return}return console.log("Processing missed payment for month:",t,"in vault:",e),B({address:e,abi:u,functionName:"processMissedPayment",args:[BigInt(t)]})},[e,B]),eo=(0,T.useCallback)(t=>{if(!e){console.error("No vault address provided");return}return console.log("Processing all missed payments up to month:",t,"in vault:",e),j({address:e,abi:u,functionName:"processAllMissedPayments",args:[BigInt(t)]})},[e,j]),ep=(0,T.useCallback)(()=>{if(!e){console.error("No vault address provided");return}return console.log("Withdrawing completed funds from vault:",e),Y({address:e,abi:u,functionName:"withdrawCompleted"})},[e,Y]),ey=(0,T.useCallback)(()=>{if(!e){console.error("No vault address provided");return}return console.log("Withdrawing early from vault:",e),en({address:e,abi:u,functionName:"withdrawEarly"})},[e,en]),ed=s&&Array.isArray(s)?{owner:s[0],token:s[1],targetAmount:s[2],monthlyAmount:s[3],totalMonths:s[4],currentBalance:s[5],totalPaid:s[6],totalPenalties:s[7],startDate:s[8],endDate:s[9],status:s[10],isActive:s[11],withdrawalTime:s[12]}:null,em=P&&Array.isArray(P)?{totalShouldPay:P[0],totalActuallyPaid:P[1],totalPenaltiesPaid:P[2],missedPaymentsCount:P[3],completedPaymentsCount:P[4]}:null;return{vaultAddress:e,vaultInfo:ed,isLoadingVaultInfo:l,refetchVaultInfo:o,currentMonth:p,isLoadingCurrentMonth:y,monthlyPayment:d&&Array.isArray(d)?{dueDate:d[0],amount:d[1],status:d[2],penaltyAmount:d[3],penaltyPaid:d[4]}:null,isLoadingMonthlyPayment:m,progressPercentage:f,isLoadingProgress:b,isCompleted:w,isLoadingCompleted:v,canWithdrawEarly:h,isLoadingCanWithdrawEarly:C,canWithdrawCompleted:A,isLoadingCanWithdrawCompleted:M,nextPaymentDueDate:k,isLoadingNextPaymentDate:x,missedPaymentsCount:S,isLoadingMissedPayments:D,paymentSummary:em,isLoadingPaymentSummary:E,makeMonthlyPayment:eu,isMakingPayment:F,makePaymentError:O,isMakePaymentPending:U,isMakePaymentSuccess:L,processMissedPaymentForMonth:el,isProcessingMissedPayment:_,processMissedPaymentError:I,isProcessMissedPaymentPending:W,isProcessMissedPaymentSuccess:q,processAllMissedPaymentsUpTo:eo,isProcessingAllMissedPayments:z,processAllMissedPaymentsError:J,isProcessAllMissedPaymentsPending:H,isProcessAllMissedPaymentsSuccess:X,withdrawCompletedFunds:ep,isWithdrawingCompleted:Z,withdrawCompletedError:$,isWithdrawCompletedPending:Q,isWithdrawCompletedSuccess:ee,withdrawEarlyFunds:ey,isWithdrawingEarly:ea,withdrawEarlyError:ei,isWithdrawEarlyPending:er,isWithdrawEarlySuccess:es,makePaymentData:V,processMissedPaymentData:R,processAllMissedPaymentsData:G,withdrawCompletedData:K,withdrawEarlyData:et}},w=()=>{let e=d("alfajores"),t=(0,g.x)();console.log("TokenRegistry hook:",{tokenRegistryAddress:e,chainId:t,isAlfajores:44787===t});let{data:n,isLoading:i,refetch:r,error:s}=(0,a.u)({address:e,abi:l,functionName:"getSupportedTokens"});console.log("Supported tokens query:",{supportedTokenAddresses:n,isLoadingSupportedTokens:i,supportedTokensError:s});let u=(0,T.useMemo)(()=>{if(console.log("Processing supported tokens..."),console.log("supportedTokenAddresses:",n),console.log("isArray:",Array.isArray(n)),console.log("Token registry address:",e),!n||!Array.isArray(n))return console.log("No supported token addresses, returning fallback currencies"),console.log("This suggests the token registry is not properly initialized"),[{symbol:"cNGN",name:"Nigerian Naira",logo:"\uD83C\uDDF3\uD83C\uDDEC",minAmount:"500000000000000000000",address:"0x4a5b03B8b16122D330306c65e4CA4BC5Dd6511d0"},{symbol:"cGHS",name:"Ghanaian Cedi",logo:"\uD83C\uDDEC\uD83C\uDDED",minAmount:"5000000000000000000",address:"0x295B66bE7714458Af45E6A6Ea142A5358A6cA375"},{symbol:"cKES",name:"Kenyan Shilling",logo:"\uD83C\uDDF0\uD83C\uDDEA",minAmount:"500000000000000000000",address:"0x1E0433C1769271ECcF4CFF9FDdD515eefE6CdF92"},{symbol:"cZAR",name:"South African Rand",logo:"\uD83C\uDDFF\uD83C\uDDE6",minAmount:"50000000000000000000",address:"0x1e5b44015Ff90610b54000DAad31C89b3284df4d"},{symbol:"cXOF",name:"West African CFA",logo:"\uD83C\uDDF8\uD83C\uDDF3",minAmount:"50000000000000000000",address:"0xB0FA15e002516d0301884059c0aaC0F0C72b019D"}];let t={"0x4a5b03B8b16122D330306c65e4CA4BC5Dd6511d0":{symbol:"cNGN",name:"Nigerian Naira",logo:"\uD83C\uDDF3\uD83C\uDDEC",minAmount:"500000000000000000000",address:"0x4a5b03B8b16122D330306c65e4CA4BC5Dd6511d0"},"0x295B66bE7714458Af45E6A6Ea142A5358A6cA375":{symbol:"cGHS",name:"Ghanaian Cedi",logo:"\uD83C\uDDEC\uD83C\uDDED",minAmount:"5000000000000000000",address:"0x295B66bE7714458Af45E6A6Ea142A5358A6cA375"},"0x1E0433C1769271ECcF4CFF9FDdD515eefE6CdF92":{symbol:"cKES",name:"Kenyan Shilling",logo:"\uD83C\uDDF0\uD83C\uDDEA",minAmount:"500000000000000000000",address:"0x1E0433C1769271ECcF4CFF9FDdD515eefE6CdF92"},"0x1e5b44015Ff90610b54000DAad31C89b3284df4d":{symbol:"cZAR",name:"South African Rand",logo:"\uD83C\uDDFF\uD83C\uDDE6",minAmount:"50000000000000000000",address:"0x1e5b44015Ff90610b54000DAad31C89b3284df4d"},"0xB0FA15e002516d0301884059c0aaC0F0C72b019D":{symbol:"cXOF",name:"West African CFA",logo:"\uD83C\uDDF8\uD83C\uDDF3",minAmount:"50000000000000000000",address:"0xB0FA15e002516d0301884059c0aaC0F0C72b019D"}},a=n.map(e=>t[e]).filter(Boolean);return console.log("Processed tokens:",a),console.log("Number of supported tokens from contract:",a.length),a},[n,e]),o=(0,T.useCallback)(e=>u.find(t=>t.address===e)||{address:e,symbol:"",name:"",decimals:18,logo:"\uD83E\uDE99",minAmount:"0"},[u]),p=(0,T.useCallback)(e=>u.some(t=>t.address===e),[u]),{data:y,isLoading:m,error:c}=(0,a.u)({address:e,abi:l,functionName:"getTokenInfo",args:["0x4a5b03B8b16122D330306c65e4CA4BC5Dd6511d0"]});return console.log("Token info query:",{tokenInfo:y,isLoadingTokenInfo:m,tokenInfoError:c}),{tokenRegistryAddress:e,supportedTokens:u,isLoadingSupportedTokens:i,refetchSupportedTokens:r,supportedTokensError:s,getTokenByAddress:o,isTokenSupported:p,tokenInfo:y,isLoadingTokenInfo:m,tokenInfoError:c}},v=()=>{let e=m("alfajores"),t=(0,g.x)();console.log("PenaltyManager hook:",{penaltyManagerAddress:e,chainId:t,isAlfajores:44787===t});let{data:n,isLoading:s}=(0,a.u)({address:e,abi:o,functionName:"getPenaltyPercentageAsPercent"});console.log("Penalty percentage query:",{penaltyPercentage:n,isLoadingPenaltyPercentage:s});let{data:u,isLoading:l}=(0,a.u)({address:e,abi:o,functionName:"getTreasuryAddress"});console.log("Treasury address query:",{treasuryAddress:u,isLoadingTreasury:l});let p=(0,T.useCallback)(async e=>{try{console.log("Calculating penalty for amount:",e.toString());let t=10n*e/100n,n=e-t;return console.log("Penalty calculation:",{originalAmount:e.toString(),penalty:t.toString(),remainingAmount:n.toString()}),{penalty:t,remainingAmount:n}}catch(e){throw console.error("Error calculating penalty:",e),e}},[]),y=(0,T.useCallback)(async e=>{try{let{penalty:t}=await p(e);return t>0n&&t<e}catch(e){return console.error("Error checking penalty acceptability:",e),!1}},[p]),{data:d,writeContract:c,isPending:f,error:b}=(0,i.S)(),{isLoading:w,isSuccess:v}=(0,r.A)({hash:d}),{data:h,writeContract:C,isPending:A,error:M}=(0,i.S)(),{isLoading:k,isSuccess:x}=(0,r.A)({hash:h}),S=(0,T.useCallback)(t=>(console.log("Updating penalty percentage to:",t.toString()),c({address:e,abi:o,functionName:"updatePenaltyPercentage",args:[t]})),[c,e]),D=(0,T.useCallback)(t=>(console.log("Updating treasury address to:",t),C({address:e,abi:o,functionName:"updateTreasuryAddress",args:[t]})),[C,e]);return{penaltyManagerAddress:e,penaltyPercentage:n,isLoadingPenaltyPercentage:s,treasuryAddress:u,isLoadingTreasury:l,calculatePenalty:p,isPenaltyAcceptable:y,updatePenaltyPercentage:S,isUpdatingPenalty:f,updatePenaltyError:b,isUpdatePenaltyPending:w,isUpdatePenaltySuccess:v,updateTreasuryAddress:D,isUpdatingTreasury:A,updateTreasuryError:M,isUpdateTreasuryPending:k,isUpdateTreasurySuccess:x,updatePenaltyData:d,updateTreasuryData:h}},h=()=>{let{address:e}=(0,c.m)(),[t,n]=(0,T.useState)(),[a,i]=(0,T.useState)(!1),r=f(),s=w(),u=v(),l=b(t);console.log("useVaults hook:",{address:e,selectedVault:t,isFetchingVaults:a});let o=(0,T.useCallback)(async(e,t,n,a)=>{try{console.log("Creating new monthly savings vault:",{tokenSymbol:e,targetAmount:t.toString(),totalMonths:n,goal:a});let i={cNGN:"0x4a5b03B8b16122D330306c65e4CA4BC5Dd6511d0",cGHS:"0x295B66bE7714458Af45E6A6Ea142A5358A6cA375",cKES:"0x1E0433C1769271ECcF4CFF9FDdD515eefE6CdF92",cZAR:"0x1e5b44015Ff90610b54000DAad31C89b3284df4d",cXOF:"0xB0FA15e002516d0301884059c0aaC0F0C72b019D"}[e];if(!i)throw Error("Token ".concat(e," not supported"));console.log("Token address resolved:",i);let s=await r.createVaultWithParams(i,t,n,a);return console.log("Monthly savings vault creation result:",s),s}catch(e){throw console.error("Error creating monthly savings vault:",e),e}},[r]),p=(0,T.useCallback)(async function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];try{if(console.log("Withdrawing from vault:",{vaultAddress:e,isEarly:t}),n(e),t)return await l.withdrawEarlyFunds();return await l.withdrawCompletedFunds()}catch(e){throw console.error("Error withdrawing from vault:",e),e}},[l]),y=(0,T.useCallback)(async(e,t)=>{try{console.log("Getting vault penalty:",{vaultAddress:e,amount:t.toString()});let{penalty:n,remainingAmount:a}=await u.calculatePenalty(t);return console.log("Penalty calculation result:",{penalty:n.toString(),remainingAmount:a.toString()}),{penalty:n,remainingAmount:a}}catch(e){throw console.error("Error getting vault penalty:",e),e}},[u]),d=(0,T.useCallback)(async()=>{try{if(console.log("Fetching active vaults..."),!e)return[];let t=await r.getUserActiveVaults(e);return console.log("Active vaults:",t),t}catch(e){return console.error("Error getting active vaults:",e),[]}},[r,e]),m=(0,T.useCallback)(async()=>{try{if(console.log("Fetching completed vaults..."),!e)return[];let t=await r.getUserCompletedVaults(e);return console.log("Completed vaults:",t),t}catch(e){return console.error("Error getting completed vaults:",e),[]}},[r,e]),g=(0,T.useCallback)(async()=>{try{if(console.log("Fetching early withdrawn vaults..."),!e)return[];let t=await r.getUserEarlyWithdrawnVaults(e);return console.log("Early withdrawn vaults:",t),t}catch(e){return console.error("Error getting early withdrawn vaults:",e),[]}},[r,e]),h=(0,T.useCallback)(async()=>{try{if(console.log("Fetching vault status summary..."),!e)return{activeCount:0,completedCount:0,earlyWithdrawnCount:0,terminatedCount:0};let t=await r.getUserVaultStatusSummary(e);return console.log("Vault status summary:",t),t}catch(e){return console.error("Error getting vault status summary:",e),{activeCount:0,completedCount:0,earlyWithdrawnCount:0,terminatedCount:0}}},[r,e]),C=(0,T.useCallback)(async(e,t)=>{try{return console.log("Making monthly payment:",{vaultAddress:e,month:t}),n(e),await l.makeMonthlyPayment(t)}catch(e){throw console.error("Error making monthly payment:",e),e}},[l]),A=(0,T.useCallback)(async(e,t)=>{try{return console.log("Processing missed payment:",{vaultAddress:e,month:t}),n(e),await l.processMissedPaymentForMonth(t)}catch(e){throw console.error("Error processing missed payment:",e),e}},[l]),M=(0,T.useCallback)(async(e,t)=>{try{return console.log("Processing all missed payments:",{vaultAddress:e,upToMonth:t}),n(e),await l.processAllMissedPaymentsUpTo(t)}catch(e){throw console.error("Error processing all missed payments:",e),e}},[l]),k=(0,T.useCallback)(async()=>{try{console.log("Refreshing vault data..."),i(!0),await r.refetchUserVaults(),console.log("Vault data refreshed successfully")}catch(e){throw console.error("Error refreshing vault data:",e),e}finally{i(!1)}},[r]),x=(0,T.useCallback)(async()=>{try{if(console.log("Checking vault creation status..."),r.isCreateVaultSuccess)return console.log("Vault creation was successful"),!0;if(r.createVaultError)return console.log("Vault creation failed:",r.createVaultError),!1;return console.log("Vault creation status unknown"),!1}catch(e){return console.error("Error checking vault creation status:",e),!1}},[r]),S=(0,T.useCallback)(async()=>{try{if(i(!0),console.log("Fetching user vaults..."),!e)return console.log("No address available"),[];console.log("Refetching user vaults from contract..."),await r.refetchUserVaults();let t=r.userVaults||[];if(console.log("User vaults fetched:",t),console.log("Number of vaults:",Array.isArray(t)?t.length:"Not an array"),!t)return console.log("No vaults data returned, returning empty array"),[];return t}catch(e){return console.error("Error getting user vaults:",e),[]}finally{i(!1)}},[r,e]),D=r.isLoadingUserVaults||a;return{selectedVault:t,setSelectedVault:n,isFetchingVaults:a,userVaults:r.userVaults||[],totalVaults:r.totalVaults||0n,isLoading:D,createNewVault:o,withdrawFromVault:p,getVaultPenalty:y,refreshVaultData:k,checkVaultCreationStatus:x,getUserVaults:S,getActiveVaults:d,getCompletedVaults:m,getEarlyWithdrawnVaults:g,getVaultStatusSummary:h,makeMonthlyPayment:C,processMissedPayment:A,processAllMissedPayments:M,vaultFactory:r,tokenRegistry:s,penaltyManager:u,vault:l}};var C=n(39217);let A=()=>{let{address:e}=(0,c.m)(),[t,n]=(0,T.useState)([]),[a,i]=(0,T.useState)(new Set),r=(0,T.useCallback)(e=>{let t={...e,timestamp:Date.now()};n(e=>[t,...e]),i(t=>new Set(t).add(e.hash)),C.Am.info("Transaction submitted: ".concat(e.description),{description:"Hash: ".concat(e.hash.slice(0,10),"...")})},[]),s=(0,T.useCallback)((e,a)=>{n(t=>t.map(t=>t.hash===e?{...t,status:a}:t)),i(t=>{let n=new Set(t);return n.delete(e),n});let r=t.find(t=>t.hash===e);r&&("success"===a?C.Am.success("Transaction successful: ".concat(r.description)):C.Am.error("Transaction failed: ".concat(r.description)))},[t]),u=(0,T.useCallback)(e=>t.find(t=>t.hash===e),[t]),l=(0,T.useCallback)(e=>t.filter(t=>t.type===e),[t]),o=(0,T.useCallback)(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10;return t.slice(0,e)},[t]),p=(0,T.useCallback)(()=>{n(e=>e.filter(e=>"pending"===e.status))},[]),y=(0,T.useCallback)(()=>{n([]),i(new Set)},[]),d=(0,T.useCallback)(()=>{let e=t.length,n=t.filter(e=>"pending"===e.status).length,a=t.filter(e=>"success"===e.status).length;return{total:e,pending:n,successful:a,failed:t.filter(e=>"failed"===e.status).length,successRate:e>0?a/e*100:0}},[t]);return(0,T.useEffect)(()=>{let e=async e=>{try{setTimeout(()=>{s(e,"success")},5e3)}catch(t){console.error("Error monitoring transaction:",t),s(e,"failed")}};a.forEach(t=>{e(t)})},[a,s]),(0,T.useEffect)(()=>{if(e){let n="transactions_".concat(e);localStorage.setItem(n,JSON.stringify(t))}},[t,e]),(0,T.useEffect)(()=>{if(e){let t="transactions_".concat(e),a=localStorage.getItem(t);if(a)try{let e=JSON.parse(a);n(e);let t=e.filter(e=>"pending"===e.status).map(e=>e.hash);i(new Set(t))}catch(e){console.error("Error loading transactions:",e)}}},[e]),{transactions:t,pendingTransactions:a,addTransaction:r,updateTransactionStatus:s,getTransaction:u,getTransactionsByType:l,getRecentTransactions:o,clearCompletedTransactions:p,clearAllTransactions:y,getTransactionStats:d,hasPendingTransactions:a.size>0,pendingCount:a.size}},M=()=>{let{address:e,isConnected:t}=(0,c.m)(),[n,a]=(0,T.useState)(null),[i,r]=(0,T.useState)(!1),s=(0,T.useCallback)(async()=>{if(!e){a(null);return}try{r(!0);let t=localStorage.getItem("user_profile_".concat(e));if(t){let e=JSON.parse(t);a(e)}else a(null)}catch(e){console.error("Error loading user profile:",e),a(null)}finally{r(!1)}},[e]),u=(0,T.useCallback)(async t=>{if(!e)throw Error("No wallet connected");try{r(!0);let n={address:e,...t,registeredAt:Date.now()};localStorage.setItem("user_profile_".concat(e),JSON.stringify(n));let i=JSON.parse(localStorage.getItem("sapasafe_users")||"[]"),s=i.findIndex(t=>t.address===e);return s>=0?i[s]=n:i.push(n),localStorage.setItem("sapasafe_users",JSON.stringify(i)),a(n),n}catch(e){throw console.error("Error saving user profile:",e),e}finally{r(!1)}},[e]),l=(0,T.useCallback)(async e=>{if(!n)throw Error("No user profile found");let t={...n,...e};return await u({fullName:t.fullName,email:t.email,country:t.country})},[n,u]),o=(0,T.useCallback)(()=>!!n,[n]),p=(0,T.useCallback)(()=>{try{return JSON.parse(localStorage.getItem("sapasafe_users")||"[]")}catch(e){return console.error("Error getting all users:",e),[]}},[]);return(0,T.useEffect)(()=>{s()},[s]),{userProfile:n,isLoading:i,isConnected:t,loadUserProfile:s,saveUserProfile:u,updateUserProfile:l,isUserRegistered:o,getAllUsers:p,isRegistered:o()}}},11879:function(e,t,n){n.d(t,{z:function(){return o}});var a=n(13267),i=n(85236),r=n(23156),s=n(43211),u=n(30733);let l=(0,s.j)("inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",{variants:{variant:{default:"bg-primary text-primary-foreground hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-input bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),o=i.forwardRef((e,t)=>{let{className:n,variant:i,size:s,asChild:o=!1,...p}=e,y=o?r.g7:"button";return(0,a.jsx)(y,{className:(0,u.cn)(l({variant:i,size:s,className:n})),ref:t,...p})});o.displayName="Button"},30733:function(e,t,n){n.d(t,{cn:function(){return r}});var a=n(77660),i=n(89850);function r(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return(0,i.m6)((0,a.W)(t))}}}]);